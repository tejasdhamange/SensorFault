name: workflow # name of workflow 

# when this workflow should trigger
on:
    push:
        branches:
            - main
        paths-ignore:
            - 'README.md'

permissions:
    id-token: write # it allows to access aws
    contents: read # this allows the workflow to read reposiotry contents 

jobs:
    integration:
        name: Continuous Integration
        runs-on: ubuntu-latest # this job runs on latest ubuntu environment provided by the github or runner
        # using ubuntu server to run this perticulur job
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3 # owner/repo@version (reading the entire repo or code)

            - name: Lint code
              run: echo "Listing repository" # just printing

            - name: Run unit tests
              run: echo "Running units tests"  # just printing

    build-and-push-ecr-image:
        name: Continous Delivery
        needs: integration
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Install Utilities
              run:
                sudo apt-get update
                sudo apt-get install -y jq unzip
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: $ {{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: $ {{ sectrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: $ {{ secrets.AWS_DEFAULT_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                IMAGE_TAG: latest
              run:
                # Build a docker container and
                # push it to ECr so that it can
                # be deployed to ECS.
                docker build -t $ {{ secrets.AWS_ECR_REPO_URI }}:$IMAGE_TAG .
                docker push $ {{ secrets.AWS_ECR_REPO_URO }}:$IMAGE_TAG

    Continous-Deployments:
        needs: build-and-push-ecr-image
        runs-on: self-hosted
        steps:
            - name: Checkout
              uses: actions/checkouts@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: $ {{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: $ {{ sectrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: $ {{ secrets.AWS_DEFAULT_REGION }}
            
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1


            - name: Pull latest images
              run:
                docker pull $ {{ secrets.AWS_ECR_REPO_URI }}:latest


            # - name: stop and remove visibility container if running
            #   run:
            
            - name: Run Docker Image to serve users
              run:
                docker run -d -p 8080:8080 --name=sensor -e 'MONGO_DB_URL=$ {{ secrets.MONGO_DB_URL }}' -e 'AWS_ACCESS_KEY_ID=$ {{ secrets.AWS_ACCESS_KEY_ID }}' -e 'AWS_SECRET_ACCESS_KEY=$ {{ secrets.AWS_SECRET_ACCESS_KEY }}' -e 'AWS_DEFAULT_REGION=$ {{ secrets.AWS_DEFAULT_REGION }}' $ {{ secrets.AWS_ECR_REPO_URI }}:latest


            - name: Clean previous image and containers
              run:
                docker system prune -f



        
            
            